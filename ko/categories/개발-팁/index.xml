<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>개발 팁 on JSYoo5B.Dev();</title><link>https://devlog.jsyoo5b.net/ko/categories/%EA%B0%9C%EB%B0%9C-%ED%8C%81/</link><description>Recent content in 개발 팁 on JSYoo5B.Dev();</description><generator>Hugo -- gohugo.io</generator><language>ko</language><managingEditor>jsyoo5b@gmail.com (JaeSang Yoo)</managingEditor><webMaster>jsyoo5b@gmail.com (JaeSang Yoo)</webMaster><copyright>©2021, All Rights Reserved</copyright><lastBuildDate>Sun, 11 Jul 2021 16:54:24 +0900</lastBuildDate><atom:link href="https://devlog.jsyoo5b.net/ko/categories/%EA%B0%9C%EB%B0%9C-%ED%8C%81/index.xml" rel="self" type="application/rss+xml"/><item><title>리눅스 커널 내 generated 헤더 분석</title><link>https://devlog.jsyoo5b.net/ko/posts/linux-kernel/generated-header/</link><pubDate>Sun, 11 Jul 2021 16:54:24 +0900</pubDate><author>jsyoo5b@gmail.com (JaeSang Yoo)</author><atom:modified>Sun, 11 Jul 2021 16:54:24 +0900</atom:modified><guid>https://devlog.jsyoo5b.net/ko/posts/linux-kernel/generated-header/</guid><description>리눅스 커널의 소스를 분석하다 보면 include/generated/에 존재하는 헤더들을 볼 수 있다. 경로의 의미 그대로, 여기 있는 헤더들은 빌드 과정에서</description><dc:creator>JaeSang Yoo</dc:creator><category>커널</category><category>gcc</category><category>개발 팁</category><category>iamroot</category></item><item><title>macOS에서의 ls 색상을 리눅스와 동일하게 변경하는 법</title><link>https://devlog.jsyoo5b.net/ko/posts/shell/ls-colors-in-mac-os/</link><pubDate>Sat, 19 Jun 2021 08:42:58 +0900</pubDate><author>jsyoo5b@gmail.com (JaeSang Yoo)</author><atom:modified>Sat, 19 Jun 2021 08:42:58 +0900</atom:modified><guid>https://devlog.jsyoo5b.net/ko/posts/shell/ls-colors-in-mac-os/</guid><description>macOS에서 터미널을 사용할 때 차이점 macOS에서 터미널을 사용하다 보면 ls의 색이 리눅스 터미널을 사용하던 것과 다른 색으로 출력되는 것을 볼 수 있다. macOS</description><dc:creator>JaeSang Yoo</dc:creator><category>shell</category><category>macOS</category><category>개발 팁</category></item><item><title>내 첫 리눅스 커널 기여</title><link>https://devlog.jsyoo5b.net/ko/posts/linux-kernel/my-first-commit/</link><pubDate>Wed, 09 Dec 2020 23:37:20 +0900</pubDate><author>jsyoo5b@gmail.com (JaeSang Yoo)</author><atom:modified>Wed, 09 Dec 2020 23:37:20 +0900</atom:modified><guid>https://devlog.jsyoo5b.net/ko/posts/linux-kernel/my-first-commit/</guid><description>리눅스 커널 소스에 첫 기여를 한 기념으로 어떻게 기여하게 되었는지 그 과정을 공유한다. 사실 코드를 수정한 것도 아니고, 고작 1줄에 불과하기때문에 그렇게 대단한 것</description><dc:creator>JaeSang Yoo</dc:creator><category>커널</category><category>git</category><category>sphinx</category><category>개발 팁</category></item><item><title>SD카드에서 라즈베리파이 headless 설정하기</title><link>https://devlog.jsyoo5b.net/ko/posts/rpi/headless-config-in-sd/</link><pubDate>Thu, 05 Nov 2020 19:40:21 +0900</pubDate><author>jsyoo5b@gmail.com (JaeSang Yoo)</author><atom:modified>Thu, 05 Nov 2020 19:40:21 +0900</atom:modified><guid>https://devlog.jsyoo5b.net/ko/posts/rpi/headless-config-in-sd/</guid><description>라즈베리파이 OS를 설치한 microSD카드를 꽂고 전원을 연결하면 바로 라즈베리파이 OS가 부팅된다. 하지만 해당 장치를 사용하려면 HDMI로 모니터에 연</description><dc:creator>JaeSang Yoo</dc:creator><category>리눅스</category><category>네트워크</category><category>headless</category><category>wpa_supplicant</category><category>개발 팁</category><category>라즈베리파이</category></item><item><title>라즈베리파이 OS 설치하기</title><link>https://devlog.jsyoo5b.net/ko/posts/rpi/flash-rpi-os-into-sd/</link><pubDate>Wed, 04 Nov 2020 20:37:36 +0900</pubDate><author>jsyoo5b@gmail.com (JaeSang Yoo)</author><atom:modified>Wed, 04 Nov 2020 20:37:36 +0900</atom:modified><guid>https://devlog.jsyoo5b.net/ko/posts/rpi/flash-rpi-os-into-sd/</guid><description>최근 라즈베리파이 사이트에서는 손쉽게 라즈베리파이 OS설치를 위한 프로그램 Raspberry Pi Imager를 제공하지만, 본 문서에서는 해당 프로그램을 사용하지 않고 직접</description><dc:creator>JaeSang Yoo</dc:creator><category>리눅스</category><category>SD카드</category><category>개발 팁</category><category>라즈베리파이</category></item><item><title>MFC 프로그램의 콘솔 실행 모드 추가</title><link>https://devlog.jsyoo5b.net/ko/posts/mfc/console-mode/</link><pubDate>Mon, 14 Sep 2020 21:03:17 +0900</pubDate><author>jsyoo5b@gmail.com (JaeSang Yoo)</author><atom:modified>Mon, 14 Sep 2020 21:03:17 +0900</atom:modified><guid>https://devlog.jsyoo5b.net/ko/posts/mfc/console-mode/</guid><description>GUI 기반으로 작성한 프로그램은 직관적이지만, 해당 기능을 사용하기 위해 마우스를 사용해야 하며, 이로 인해 자동화하기 어렵다는 문제점이 있다. 물론 매크로 등을 활</description><dc:creator>JaeSang Yoo</dc:creator><category>MFC</category><category>GUI</category><category>개발 팁</category></item></channel></rss>